# File              : .tmux.conf
# Author            : David Barcene <david.barcene@utp.ac.pa>
# Date              : 25.03.2022
# Last Modified Date: 25.03.2022
# Last Modified By  : David Barcene <david.barcene@utp.ac.pa>
# ==============================================================================
# #
#
#   TMUX CONFIGURATION
#   tmux.conf for the anaconda environment
#
# ==============================================================================


bind -n M-tab next
bind -n F1 list-keys

set-option -s exit-unattached off
set-option -g base-index 1

# use 256 term for color coding
#set -ga terminal-overrides ",screen-256color:Tc"
set -g default-terminal "xterm-256color"

# making copy/paste work
#set -g default-shell $SHELL
#set -g default-command "reattach-to-user-namespace -l ${SHELL}"

# increase scroll-bach history
set -g history-limit 5000

# use vim key bindings
setw -g mode-keys vi

# tmux 2.4 has different name for this option.
# See https://github.com/rhinstaller/anaconda/pull/1040
# This checks if the current tmux version (from tmux -V) >= 2.4, using
# sort -V to do a version-y comparison (and -r to reverse it)
if-shell '[ $(printf "$(tmux -V | cut -d" " -f2)\n2.4" | sort -Vr | head -n1) == $(tmux -V | cut -d" " -f2) ]' \
    'set-option -g remain-on-exit on' \
    'set-option -g set-remain-on-exit on'

set-option -g history-limit 10000
set -g mouse on

# The idea here is to detach the client started here via anaconda.service, and
# then re-attach to it in the tmux service run on the console tty.
new-session -d -s anaconda -n main "anaconda"

set-option status-right '#[fg=blue]#(echo -n "Switch tab: Alt+Tab | Help: F1 ")'

new-window -d -n shell          "bash --login"
new-window -d -n log            "tail -F /tmp/anaconda.log"
new-window -d -n storage-log    "tail -F /tmp/storage.log"
new-window -d -n program-log    "tail -F /tmp/program.log"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-w' if-shell "$is_vim" 'send-keys C-w'  'select-pane -U'
bind-key -n 'C-a' if-shell "$is_vim" 'send-keys C-a'  'select-pane -L'
bind-key -n 'C-s' if-shell "$is_vim" 'send-keys C-s'  'select-pane -D'
bind-key -n 'C-d' if-shell "$is_vim" 'send-keys C-d'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-w' select-pane -U
bind-key -T copy-mode-vi 'C-a' select-pane -L
bind-key -T copy-mode-vi 'C-s' select-pane -D
bind-key -T copy-mode-vi 'C-d' select-pane -R

bind  d split-window -h -c "#{pane_current_path}"
bind  s split-window -v -c "#{pane_current_path}"

run-shell 'powerline-config tmux setup'
#source "/usr/share/tmux/powerline.conf"
